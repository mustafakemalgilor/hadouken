// ______________________________________________________
// VSCode Remote-Containers extension development container
// definition file
//
// @file    devcontainer.json
// @author  Mustafa Kemal GILOR <mgilor@nettsi.com>
// @date    09.05.2020
// 
// Copyright (c) Nettsi Informatics Technology Inc. 
// All rights reserved. Licensed under the Apache 2.0 License. 
// See LICENSE in the project root for license information.
// 
// SPDX-License-Identifier:	Apache 2.0
// ______________________________________________________
{
    "name": "NETTSI C++ Development Environment Container",
    // (mgilor) We're now using docker-compose instead, to extend possibilities.
    "dockerComposeFile": [ "docker-compose.yml", "../.hadouken.docker-compose.extend.yml" ],
    // Service name defined by docker-compose to be used as remote container 
    "service": "devenv",
    // Workspace to display in vscode
    "workspaceFolder": "/workspace",
    "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],

    // Use 'settings' to set *default* container specific settings.json values on container create. 
    // You can edit these settings after create using File > Preferences > Settings > Remote.
    "settings": { 
        "terminal.integrated.shell.linux": "/bin/bash"
    },
    "containerEnv": {},
    "remoteEnv": {},
    "build": { 
        "args": 
        { 
            "apt_extra_package_list": "${localEnv:HADOUKEN_APT_EXTRA_PACKAGES}",
            "pip_extra_package_list": "${localEnv:HADOUKEN_PIP_EXTRA_PACKAGES}"
        } 
    },
    // Run user-specified post creation script (if exist)
    // Also initialize git flow for repository.
    "postCreateCommand": "git flow config || git flow init -d;  ( test -f .hadouken.bootstrap.sh && sudo apt update && sudo bash .hadouken.bootstrap.sh ) || true",
    // Run as user `vscode`
    "remoteUser": "vscode",
    // Add the IDs of extensions you want installed when the container is created in the array below.
    "extensions": [
        "ms-vscode.cpptools",
        // Bash Beautify
        "shakram02.bash-beautify",
        // C++ Algorithm Mnemonics
        "davidbroetje.algorithm-mnemonics-vscode",
        // CMake Language Support
        "twxs.cmake",
        // CMake Tools
        "ms-vscode.cmake-tools",
        // Python extension
        "ms-python.python",
        // GitLens
        "eamodio.gitlens",
        // Doxygen Language Support
        "bbenoist.doxygen",
        // Doxygen Documentation
        "cschlosser.doxdocgen",
        // Gitconfig Syntax
        "sidneys1.gitconfig",
        // Live Share Extension Pack
        "ms-vsliveshare.vsliveshare-pack",
        // Markdown All in one
        "yzhang.markdown-all-in-one",
        //Markdown PDF
        "yzane.markdown-pdf",
        // Markdown Lint
        "davidanson.vscode-markdownlint",
        // Shebang Snippets
        "rpinski.shebang-snippets",
        // TLDR Pages
        "bmuskalla.vscode-tldr",
        // TODO Tree
        "gruntfuggly.todo-tree",
        // VS IntelliCode
        "visualstudioexptteam.vscodeintellicode",
        // vscode-spotify
        "shyykoserhiy.vscode-spotify",
        // Test Explorer UI
        "hbenl.vscode-test-explorer",
        // Word Count
        "ms-vscode.wordcount",
        // vscode-clangd
        "llvm-vs-code-extensions.vscode-clangd",
        // Resource monitor
        "mutantdino.resourcemonitor",
        // CMake Test Adapter for Test Explorer Sidebar
        "fredericbonnet.cmake-test-adapter",
        // Integrated hex editor
        "ms-vscode.hexeditor"
    ]
}
